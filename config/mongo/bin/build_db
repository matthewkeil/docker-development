#!/bin/bash

#
#
#   verify parameters
#
#

if [[ $1 == "" ]]; then
    read -p ">>> enter a db name (default: booger-eater): " DB_NAME
    if [[ "$DB_NAME" == "" ]]; then
        DB_NAME="booger-eater"
    fi
else
    DB_NAME=$1
fi

export MONGO_DBNAME=$DB_NAME

if [[ $2 == "" ]]; then
    read -p '>>> enter a username (default: username): ' USERNAME
    if [[ "$USERNAME" == "" ]]; then
        USERNAME="username"
    fi
else
    USERNAME=$2
fi
export MONGO_USERNAME=$USERNAME

if [[ $3 == "" ]]; then
    read -p '>>> enter a password (default: password): ' PASSWORD
    if [[ "$PASSWORD" == "" ]]; then
        PASSWORD="password"
    fi
else
    PASSWORD=$3
fi
export MONGO_PASSWORD=$PASSWORD

if [[ $4 == "" ]]; then
    SETUP_FILES=${SETUP_DIR:-"/config/dbs"}
    DB_SETUP="${SETUP_FILES}/${DB_NAME}.conf"
fi

if [[ -f $DB_SETUP ]]; then
    printf ">>>\n>>> ERROR: database with same name already exists\n>>>"
    exit 1
fi

# Wait for MongoDB to boot
NOT_RUNNING=1
while [[ NOT_RUNNING -ne 0 ]]; do
    echo ">>> waiting for of mongo daemon to start..."
    sleep 1
    mongo admin --eval "help" >/dev/null 2>&1
    NOT_RUNNING=$?
done

mongo admin -u $MONGO_ROOT_USER -p $MONGO_ROOT_PASS << EOF
use $DB_NAME
db.createUser({user: '$USERNAME', pwd: '$PASSWORD', roles:[{role:'dbOwner', db:'$DB_NAME'}]})
EOF

sleep 1

printf "${DB_NAME}\n${USERNAME}\n${PASSWORD}\n\n" >> $DB_SETUP

echo "DB setup complete"

exit 0

version: "3.2"

services:
  # nginx:
  #   container_name: nginx
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: .docker/nginx.dockerfile
  #   networks: 
  #     - uc-network
  #   volumes:
  #     - type: bind
  #       source: ./.dev/nginx/logs
  #       targe: /var/log/nginx
  #     - type: bind
  #       source: ./public
  #       target: /srv/pub/
  # redis:
  #   container_name: redis
  #   restart: always
  #   build: 
  #     context: .
  #     dockerfile: .docker/redis.dockerfile
  #   env_file:
  #     - .env
  #   networks:
  #     - uc-network
  #   ports: 
  #     - "6379:6379"
  #   volumes:
  #     - type: bind
  #       source: ./.dev/redis
  #       target: /var/lib/redis
  # mongo:
  #   container_name: mongo
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: .docker/mongo.dockerfile
  #   env_file:
  #     - .env 
  #   networks: 
  #     - uc-network
  #   ports:
  #     - "27017:27017"
  #   volumes: 
  #     - type: bind
  #       source: ./.dev/mongo/data
  #       target: /data/db 
  #     - type: bind
  #       source: ./.dev/mongo/logs
  #       target: /var/log/mongodb
  neo4j:
    container_name: neo4j
    restart: always
    # image: neo4j
    build:
      context: .
      image: neo4j
      # dockerfile: .docker/neo4j.dockerfile
    env_file:
      - ./.env
    networks:
      - uc-network
    ports: 
      - "7687:7687"
    volumes: 
      - type: bind
        source: ./.dev/neo4j/data
        target: /data 
      - type: bind
        source: ./.dev/neo4j/logs
        target: /logs
  # server:
  #   container_name: server
  #   build:
  #     context: .
  #     dockerfile: .docker/server/Dockerfile
  #   restart: always
  #   env_file:
  #     - .env 
  #   networks: 
  #     - uc-network
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - type: bind
  #       source: ./server
  #       target: /server
networks:
  uc-network:
    driver: bridge

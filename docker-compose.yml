version: "3.7"

volumes:
  mongo:
  neo4j:
  redis:
  nginx:
  
services:
  data:
    container_name: data
    build:
      context: .
      dockerfile: .docker/data.dockerfile
    volumes:
      - mongo:/data/mongo
      - neo4j:/data/neo4j
      - redis:/data/redis
      - nginx:/data/nginx
  redis:
    container_name: redis
    restart: always
    build: 
      context: .
      dockerfile: .docker/redis.dockerfile
    env_file:
      - .env
    networks:
      - uc-network
    ports: 
      - "6379:6379"
    volumes:
      - redis:/data
  mongo:
    container_name: mongo
    restart: always
    image: bitnami/mongodb:latest
    environment:
      - MONGODB_ROOT_PASSWORD=pass
      - MONGODB_DATABASE=utila-coffee
      - MONGODB_USERNAME=apiUser
      - MONGODB_PASSWORD=apiPass
    networks: 
      - uc-network
    ports:
      - "27017:27017"
    volumes:
      - mongo:/bitnami
  neo4j:
    container_name: neo4j
    restart: always
    image: bitnami/neo4j
    env_file:
      - ./.env
    networks:
      - uc-network
    ports: 
      - "7687:7687"
    volumes: 
      - neo4j:/bitnami
  # nginx:
  #   container_name: nginx
  #   restart: always
  #   build:
  #     context: ./
  #     dockerfile: .docker/nginx.dockerfile
  #   networks: 
  #     - uc-network
  #   depends_on: 
  #     - graphql
  #   volumes:
  #     - type: bind
  #       source: ./public
  #       target: /var/public/
  #     - type: bind 
  #       source: ./.dev/nginx/cache
  #       target: /var/cache/nginx
  # graphql:
  #   container_name: graphql
  #   build:
  #     context: .
  #     dockerfile: .docker/server.dockerfile
  #   restart: always
  #   env_file:
  #     - .env 
  #   networks: 
  #     - uc-network
  #   volumes:
  #     - type: bind
  #       source: ./
  #       target: /home/app
networks:
  uc-network:
    driver: bridge

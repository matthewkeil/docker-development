version: "3"

services:
  mongo:
    container_name: mongo
    restart: always
    volumes: /volumes/mongodb:/data/db
    networks: uc-network
    env_file: .env
    command: --config mongo.conf
    build:
      context: .
      dockerfile: config/mongo/Dockerfile
  # node:
  #   dependsOn:
  #     - mongo
  #     - redis
  #   container_name: uc-node
  #   build:
  #     context: .
  #     dockerfile: config/api/Dockerfile
  #   ports: "4000:4000"
  #   networks: uc-network
  # postgres:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ucApi
  #     POSTGRES_PASSWORD: ucApi
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  # nginx:
  #   container_name: nginx
  #   build:
  #     context: .
  #     dockerfile: .docker/nginx/.dockerfile
  #   links:
  #     node1: node1
  #     node2: node2
  #     node3: node3
  #   ports:
  #     "80:80"
  #     "443:443"
  #   env_file: .docker/nginx/${NODE_ENV}.env
  #   networks: uc-network
  # prisma:
  #   image: prismagraphql/prisma
  #   restart: always
  #   ports: "3001:3001"
  #   environment:
  #     PRISMA_CONFIG: |
  #       managementApiSecret: __YOUR_MANAGEMENT_API_SECRET__
  #       port: 3001
  #       databases:
  #         default:
  #           connector: postgress
  #           host: postgress
  #           port: 5432
  #           user: ucApi
  #           password: ucApi
  #           migrations: true
  # neo4j:
  #   image: neo4j
  #   networks: uc-network

networks:
  uc-network:
    driver: bridge
